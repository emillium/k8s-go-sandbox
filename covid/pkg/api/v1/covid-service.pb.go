// Code generated by protoc-gen-go. DO NOT EDIT.
// source: covid-service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Taks we have to do
type Covid struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Date and time to remind the todo task
	Date *timestamp.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	// cases
	Cases int64 `protobuf:"varint,3,opt,name=cases,proto3" json:"cases,omitempty"`
	// deaths
	Deaths               int64    `protobuf:"varint,4,opt,name=deaths,proto3" json:"deaths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Covid) Reset()         { *m = Covid{} }
func (m *Covid) String() string { return proto.CompactTextString(m) }
func (*Covid) ProtoMessage()    {}
func (*Covid) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9fec84fbfc6c3a, []int{0}
}

func (m *Covid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Covid.Unmarshal(m, b)
}
func (m *Covid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Covid.Marshal(b, m, deterministic)
}
func (m *Covid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Covid.Merge(m, src)
}
func (m *Covid) XXX_Size() int {
	return xxx_messageInfo_Covid.Size(m)
}
func (m *Covid) XXX_DiscardUnknown() {
	xxx_messageInfo_Covid.DiscardUnknown(m)
}

var xxx_messageInfo_Covid proto.InternalMessageInfo

func (m *Covid) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *Covid) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Covid) GetCases() int64 {
	if m != nil {
		return m.Cases
	}
	return 0
}

func (m *Covid) GetDeaths() int64 {
	if m != nil {
		return m.Deaths
	}
	return 0
}

type Covids struct {
	Data                 []*Covid `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Covids) Reset()         { *m = Covids{} }
func (m *Covids) String() string { return proto.CompactTextString(m) }
func (*Covids) ProtoMessage()    {}
func (*Covids) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9fec84fbfc6c3a, []int{1}
}

func (m *Covids) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Covids.Unmarshal(m, b)
}
func (m *Covids) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Covids.Marshal(b, m, deterministic)
}
func (m *Covids) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Covids.Merge(m, src)
}
func (m *Covids) XXX_Size() int {
	return xxx_messageInfo_Covids.Size(m)
}
func (m *Covids) XXX_DiscardUnknown() {
	xxx_messageInfo_Covids.DiscardUnknown(m)
}

var xxx_messageInfo_Covids proto.InternalMessageInfo

func (m *Covids) GetData() []*Covid {
	if m != nil {
		return m.Data
	}
	return nil
}

// Request data to create new todo task
type CountryCovid struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// country
	Country string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	// country
	CountryCode string `protobuf:"bytes,3,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	// Task entity to add
	Covids               *Covids  `protobuf:"bytes,4,opt,name=covids,proto3" json:"covids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountryCovid) Reset()         { *m = CountryCovid{} }
func (m *CountryCovid) String() string { return proto.CompactTextString(m) }
func (*CountryCovid) ProtoMessage()    {}
func (*CountryCovid) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9fec84fbfc6c3a, []int{2}
}

func (m *CountryCovid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountryCovid.Unmarshal(m, b)
}
func (m *CountryCovid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountryCovid.Marshal(b, m, deterministic)
}
func (m *CountryCovid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountryCovid.Merge(m, src)
}
func (m *CountryCovid) XXX_Size() int {
	return xxx_messageInfo_CountryCovid.Size(m)
}
func (m *CountryCovid) XXX_DiscardUnknown() {
	xxx_messageInfo_CountryCovid.DiscardUnknown(m)
}

var xxx_messageInfo_CountryCovid proto.InternalMessageInfo

func (m *CountryCovid) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CountryCovid) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *CountryCovid) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *CountryCovid) GetCovids() *Covids {
	if m != nil {
		return m.Covids
	}
	return nil
}

// Contains data of created todo task
type CreateRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// country
	Country string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	// country
	CountryCode string `protobuf:"bytes,3,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	// Date and time to remind the todo task
	Date *timestamp.Timestamp `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	// cases
	Cases int64 `protobuf:"varint,5,opt,name=cases,proto3" json:"cases,omitempty"`
	// deaths
	Deaths               int64    `protobuf:"varint,6,opt,name=deaths,proto3" json:"deaths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9fec84fbfc6c3a, []int{3}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *CreateRequest) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *CreateRequest) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *CreateRequest) GetCases() int64 {
	if m != nil {
		return m.Cases
	}
	return 0
}

func (m *CreateRequest) GetDeaths() int64 {
	if m != nil {
		return m.Deaths
	}
	return 0
}

// Contains data of created todo task
type CreateResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// ID of created data
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9fec84fbfc6c3a, []int{4}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Request data to read todo task
type ReadRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Unique integer identifier of the todo task
	CountryCode          string   `protobuf:"bytes,2,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9fec84fbfc6c3a, []int{5}
}

func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (m *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(m, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

func (m *ReadRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadRequest) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

// Contains todo task data specified in by ID request
type ReadResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Task entity read by ID
	Data                 *CountryCovid `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ReadResponse) Reset()         { *m = ReadResponse{} }
func (m *ReadResponse) String() string { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()    {}
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9fec84fbfc6c3a, []int{6}
}

func (m *ReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponse.Unmarshal(m, b)
}
func (m *ReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponse.Marshal(b, m, deterministic)
}
func (m *ReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponse.Merge(m, src)
}
func (m *ReadResponse) XXX_Size() int {
	return xxx_messageInfo_ReadResponse.Size(m)
}
func (m *ReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponse proto.InternalMessageInfo

func (m *ReadResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadResponse) GetData() *CountryCovid {
	if m != nil {
		return m.Data
	}
	return nil
}

// Request data to read all todo task
type ReadAllRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadAllRequest) Reset()         { *m = ReadAllRequest{} }
func (m *ReadAllRequest) String() string { return proto.CompactTextString(m) }
func (*ReadAllRequest) ProtoMessage()    {}
func (*ReadAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9fec84fbfc6c3a, []int{7}
}

func (m *ReadAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAllRequest.Unmarshal(m, b)
}
func (m *ReadAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAllRequest.Marshal(b, m, deterministic)
}
func (m *ReadAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAllRequest.Merge(m, src)
}
func (m *ReadAllRequest) XXX_Size() int {
	return xxx_messageInfo_ReadAllRequest.Size(m)
}
func (m *ReadAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAllRequest proto.InternalMessageInfo

func (m *ReadAllRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

// Contains list of all todo tasks
type ReadAllResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// List of all todo tasks
	Data                 []*CountryCovid `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ReadAllResponse) Reset()         { *m = ReadAllResponse{} }
func (m *ReadAllResponse) String() string { return proto.CompactTextString(m) }
func (*ReadAllResponse) ProtoMessage()    {}
func (*ReadAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9fec84fbfc6c3a, []int{8}
}

func (m *ReadAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAllResponse.Unmarshal(m, b)
}
func (m *ReadAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAllResponse.Marshal(b, m, deterministic)
}
func (m *ReadAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAllResponse.Merge(m, src)
}
func (m *ReadAllResponse) XXX_Size() int {
	return xxx_messageInfo_ReadAllResponse.Size(m)
}
func (m *ReadAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAllResponse proto.InternalMessageInfo

func (m *ReadAllResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadAllResponse) GetData() []*CountryCovid {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Covid)(nil), "v1.Covid")
	proto.RegisterType((*Covids)(nil), "v1.Covids")
	proto.RegisterType((*CountryCovid)(nil), "v1.CountryCovid")
	proto.RegisterType((*CreateRequest)(nil), "v1.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "v1.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "v1.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "v1.ReadResponse")
	proto.RegisterType((*ReadAllRequest)(nil), "v1.ReadAllRequest")
	proto.RegisterType((*ReadAllResponse)(nil), "v1.ReadAllResponse")
}

func init() {
	proto.RegisterFile("covid-service.proto", fileDescriptor_2e9fec84fbfc6c3a)
}

var fileDescriptor_2e9fec84fbfc6c3a = []byte{
	// 415 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xdd, 0x6a, 0xdb, 0x30,
	0x14, 0xc6, 0x3f, 0x71, 0xf0, 0x71, 0x96, 0x64, 0xca, 0x18, 0xc6, 0x30, 0x66, 0xc4, 0x60, 0xde,
	0xc5, 0x1c, 0xe2, 0x3d, 0x41, 0x08, 0x0c, 0x76, 0xab, 0xf5, 0x05, 0x14, 0x4b, 0x4d, 0x0d, 0x49,
	0xec, 0x5a, 0x8a, 0x4b, 0xef, 0xfa, 0x24, 0x7d, 0x91, 0xbe, 0x5c, 0xb1, 0x64, 0x27, 0x4e, 0x1b,
	0x43, 0x0b, 0xbd, 0xb3, 0xce, 0xcf, 0xf7, 0x7d, 0xe7, 0x3b, 0xc7, 0x30, 0x4b, 0xf3, 0x2a, 0x63,
	0xbf, 0x05, 0x2f, 0xab, 0x2c, 0xe5, 0x71, 0x51, 0xe6, 0x32, 0x47, 0x66, 0xb5, 0x08, 0xbe, 0x6f,
	0xf2, 0x7c, 0xb3, 0xe5, 0x73, 0x15, 0x59, 0x1f, 0xae, 0xe7, 0x32, 0xdb, 0x71, 0x21, 0xe9, 0xae,
	0xd0, 0x45, 0xf8, 0x0e, 0x06, 0xab, 0xba, 0x17, 0x4d, 0xc1, 0xa2, 0x45, 0xe6, 0x1b, 0xa1, 0x11,
	0xb9, 0xa4, 0xfe, 0x44, 0x31, 0xd8, 0x8c, 0x4a, 0xee, 0x9b, 0xa1, 0x11, 0x79, 0x49, 0x10, 0x6b,
	0xa8, 0xb8, 0x85, 0x8a, 0xaf, 0x5a, 0x28, 0xa2, 0xea, 0xd0, 0x17, 0x18, 0xa4, 0x54, 0x70, 0xe1,
	0x5b, 0xa1, 0x11, 0x59, 0x44, 0x3f, 0xd0, 0x57, 0x70, 0x18, 0xa7, 0xf2, 0x46, 0xf8, 0xb6, 0x0a,
	0x37, 0x2f, 0xfc, 0x13, 0x1c, 0x45, 0x2c, 0xd0, 0x37, 0xc5, 0x43, 0x7d, 0x23, 0xb4, 0x22, 0x2f,
	0x71, 0xe3, 0x6a, 0x11, 0xab, 0x8c, 0x82, 0xa5, 0xf8, 0xc1, 0x80, 0xd1, 0x2a, 0x3f, 0xec, 0x65,
	0x79, 0xdf, 0xa7, 0xd4, 0x87, 0x61, 0xaa, 0x2b, 0x94, 0x58, 0x97, 0xb4, 0x4f, 0x14, 0x82, 0x97,
	0xb6, 0xbd, 0x8c, 0x2b, 0x65, 0x2e, 0xe9, 0x86, 0x10, 0x06, 0x47, 0x99, 0xa7, 0xf5, 0x79, 0x09,
	0x1c, 0xf9, 0x05, 0x69, 0x32, 0xf8, 0xc9, 0x80, 0x4f, 0xab, 0x92, 0x53, 0xc9, 0x09, 0xbf, 0x3d,
	0x70, 0x21, 0x3f, 0x58, 0x43, 0xeb, 0xb4, 0xfd, 0x5e, 0xa7, 0x07, 0x97, 0x9d, 0x76, 0xce, 0x9c,
	0x4e, 0x60, 0xdc, 0x8a, 0x17, 0x45, 0xbe, 0x17, 0xfc, 0x82, 0xfa, 0x31, 0x98, 0x19, 0x53, 0xc2,
	0x2d, 0x62, 0x66, 0x0c, 0x2f, 0xc1, 0x23, 0x9c, 0xb2, 0xfe, 0x71, 0x5f, 0x0c, 0x65, 0xbe, 0x1a,
	0x0a, 0xff, 0x85, 0x91, 0x86, 0xe8, 0x25, 0xfd, 0xd1, 0x2c, 0x5e, 0x1f, 0xd8, 0x54, 0x1b, 0x7f,
	0x5a, 0x74, 0xb3, 0x7f, 0x0c, 0xe3, 0x1a, 0x67, 0xb9, 0xdd, 0xf6, 0xaa, 0xc1, 0xff, 0x60, 0x72,
	0xac, 0x79, 0x03, 0x9d, 0xd5, 0x4f, 0x97, 0x3c, 0xaa, 0x73, 0xab, 0x32, 0xf6, 0x5f, 0xff, 0x4c,
	0x68, 0x0e, 0x8e, 0xb6, 0x0f, 0x7d, 0x56, 0x2d, 0xdd, 0x3b, 0x08, 0x50, 0x37, 0xd4, 0x30, 0xff,
	0x02, 0xbb, 0x16, 0x83, 0x26, 0x75, 0xae, 0xe3, 0x62, 0x30, 0x3d, 0x05, 0x9a, 0xd2, 0x04, 0x86,
	0x8d, 0x6e, 0x84, 0xda, 0xe4, 0x69, 0xd0, 0x60, 0x76, 0x16, 0xd3, 0x3d, 0x6b, 0x47, 0x9d, 0xc5,
	0x9f, 0xe7, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1e, 0xe4, 0xe1, 0x3e, 0xf4, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CovidServiceClient is the client API for CovidService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CovidServiceClient interface {
	// Create new todo task
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	// Read todo task
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error)
	// Read all todo tasks
	ReadAll(ctx context.Context, in *ReadAllRequest, opts ...grpc.CallOption) (*ReadAllResponse, error)
}

type covidServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCovidServiceClient(cc grpc.ClientConnInterface) CovidServiceClient {
	return &covidServiceClient{cc}
}

func (c *covidServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/v1.CovidService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *covidServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error) {
	out := new(ReadResponse)
	err := c.cc.Invoke(ctx, "/v1.CovidService/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *covidServiceClient) ReadAll(ctx context.Context, in *ReadAllRequest, opts ...grpc.CallOption) (*ReadAllResponse, error) {
	out := new(ReadAllResponse)
	err := c.cc.Invoke(ctx, "/v1.CovidService/ReadAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CovidServiceServer is the server API for CovidService service.
type CovidServiceServer interface {
	// Create new todo task
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	// Read todo task
	Read(context.Context, *ReadRequest) (*ReadResponse, error)
	// Read all todo tasks
	ReadAll(context.Context, *ReadAllRequest) (*ReadAllResponse, error)
}

// UnimplementedCovidServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCovidServiceServer struct {
}

func (*UnimplementedCovidServiceServer) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedCovidServiceServer) Read(ctx context.Context, req *ReadRequest) (*ReadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedCovidServiceServer) ReadAll(ctx context.Context, req *ReadAllRequest) (*ReadAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadAll not implemented")
}

func RegisterCovidServiceServer(s *grpc.Server, srv CovidServiceServer) {
	s.RegisterService(&_CovidService_serviceDesc, srv)
}

func _CovidService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CovidServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.CovidService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CovidServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CovidService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CovidServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.CovidService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CovidServiceServer).Read(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CovidService_ReadAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CovidServiceServer).ReadAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.CovidService/ReadAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CovidServiceServer).ReadAll(ctx, req.(*ReadAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CovidService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.CovidService",
	HandlerType: (*CovidServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _CovidService_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _CovidService_Read_Handler,
		},
		{
			MethodName: "ReadAll",
			Handler:    _CovidService_ReadAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "covid-service.proto",
}

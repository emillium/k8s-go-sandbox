syntax = "proto3";
package v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// Taks we have to do
message Covid {
  // API versioning: it is my best practice to specify version explicitly
  string api = 1;

  // Date and time to remind the todo task
  google.protobuf.Timestamp date = 2;

  // cases
  int64 cases = 3;

  // deaths
  int64 deaths = 4;
}

message Covids {
  repeated Covid covids = 1;
}

// Request data to create new todo task
message CountryCovid {
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // country
    string country = 2;

    // country
    string countryCode = 3;

    // Task entity to add
    Covids covids = 4;
}

// Contains data of created todo task
message CreateRequest {
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // ID of created task
    CountryCovid data = 2;
}

// Contains data of created todo task
message CreateResponse{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // ID of created data
    int64 id = 2;
}

// Request data to read todo task
message ReadRequest{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Unique integer identifier of the todo task
    int64 id = 2;
}

// Contains todo task data specified in by ID request
message ReadResponse{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Task entity read by ID
    CountryCovid data = 2;
}

// Request data to update todo task
message UpdateRequest{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Task entity to update
    CountryCovid data = 2;
}

// Contains status of update operation
message UpdateResponse{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Contains number of entities have beed updated
    // Equals 1 in case of succesfull update
    int64 updated = 2;
}

// Request data to delete todo task
message DeleteRequest{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Unique integer identifier of the todo task to delete
    int64 id = 2;
}

// Contains status of delete operation
message DeleteResponse{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Contains number of entities have beed deleted
    // Equals 1 in case of succesfull delete
    int64 deleted = 2;
}

// Request data to read all todo task
message ReadAllRequest{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;
}

// Contains list of all todo tasks
message ReadAllResponse{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // List of all todo tasks
    repeated CountryCovid datas = 2;
}

// Service to manage list of todo tasks
service CovidService {
    // Create new todo task
    rpc Create(CreateRequest) returns (CreateResponse);

    // Read todo task
    rpc Read(ReadRequest) returns (ReadResponse);

    // Update todo task
    rpc Update(UpdateRequest) returns (UpdateResponse);

    // Delete todo task
    rpc Delete(DeleteRequest) returns (DeleteResponse);

    // Read all todo tasks
    rpc ReadAll(ReadAllRequest) returns (ReadAllResponse);
}
